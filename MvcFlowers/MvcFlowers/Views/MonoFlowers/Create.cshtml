@model MvcFlowers.Models.MonoFlowers

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>MonoFlowers</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" id="createForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" id="nameInput" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RecievementDate" class="control-label"></label>
                <input asp-for="RecievementDate" class="form-control" />
                <span asp-validation-for="RecievementDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Colour" class="control-label"></label>
                <input asp-for="Colour" class="form-control" id="colourInput" />
                <span asp-validation-for="Colour" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.getElementById('createForm').addEventListener('submit', function (event) {
            const nameInput = document.getElementById('nameInput');
            const colourInput = document.getElementById('colourInput');
            const nameValue = nameInput.value.trim();
            const colourValue = colourInput.value.trim();
            const regex = /^[A-Za-zА-Яа-яЁё]+$/; // Регулярное выражение для проверки только букв

            // Проверка поля Name
            if (!regex.test(nameValue)) {
                event.preventDefault(); // Предотвращаем отправку формы
                alert("Поле 'Name' должно содержать только буквы.");
                nameInput.focus(); // Устанавливаем фокус на поле ввода
                return; 
            }

            // Проверка поля Colour
            if (!regex.test(colourValue)) {
                event.preventDefault(); // Предотвращаем отправку формы
                alert("Поле 'Colour' должно содержать только буквы.");
                colourInput.focus(); // Устанавливаем фокус на поле ввода
            }
        });
    </script>
}

