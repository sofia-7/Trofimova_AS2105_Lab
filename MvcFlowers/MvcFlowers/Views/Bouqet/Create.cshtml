@model MvcFlowers.Models.Bouqet

<form asp-action="Create" id="createBouquetForm">
    <h3>Create</h3>
    <h4>Add flowers to the bouquet</h4>

    <div id="flowers">
        <select id="flowerSelect">
            <option value="">-- Choose flower --</option>
            @foreach (var flower in ViewBag.AvailableFlowers)
            {
                <option value="@flower.Value">@flower.Text</option>
            }
        </select>
        <button type="button" id="addFlowerButton">Add</button>
    </div>
    
    <h4>Added flowers:</h4>
    <ul id="flowerList"></ul> <!-- Список для отображения добавленных цветов -->
    <!-- Скрытое поле для передачи идентификаторов выбранных цветов -->
    <input type="hidden" asp-for="SelectedFlowerIds" id="SelectedFlowerIds" />
    <button type="submit">Create</button>
</form>

@section Scripts {
    <script>
        const flowerList = document.getElementById('flowerList');
        const flowerSelect = document.getElementById('flowerSelect');
        const selectedFlowerIdsInput = document.getElementById('SelectedFlowerIds');
        const createBouquetForm = document.getElementById('createBouquetForm');

        // Преобразуем строку ViewBag.ExistingFlowerIds в массив
        const existingFlowerIds = "@ViewBag.ExistingFlowerIds".split(',').map(id => id.trim());

        document.getElementById('addFlowerButton').addEventListener('click', function () {
            const selectedFlowerId = flowerSelect.value;
            const selectedFlowerText = flowerSelect.options[flowerSelect.selectedIndex].text;

            if (selectedFlowerId) {
                // Проверка, есть ли уже этот цветок в списке
                const existingItems = Array.from(flowerList.getElementsByTagName('li'));
                const isDuplicate = existingItems.some(item => item.textContent === selectedFlowerText);

                // Проверка на совпадение с существующими идентификаторами
                if (existingFlowerIds.includes(selectedFlowerId)) {
                    alert("Этот цветок уже существует в других букетах.");
                    return; // Прекращаем выполнение, если цветок уже существует
                }

                if (!isDuplicate) {
                    // Добавление цветка в список на странице
                    const listItem = document.createElement('li');
                    listItem.textContent = selectedFlowerText;
                    flowerList.appendChild(listItem);

                    // Обновление скрытого поля с идентификаторами
                    const currentIds = selectedFlowerIdsInput.value ? selectedFlowerIdsInput.value.split(',') : [];
                    currentIds.push(selectedFlowerId);
                    selectedFlowerIdsInput.value = currentIds.join(',');
                } else {
                    alert("Этот цветок уже добавлен в список.");
                }

                console.log("Добавленный цветок ID: " + selectedFlowerId);
                console.log("Текущие выбранные ID: " + selectedFlowerIdsInput.value);
            } else {
                alert("Пожалуйста, выберите цветок.");
            }
        });

        // Проверка на пустой список перед отправкой формы
        createBouquetForm.addEventListener('submit', function (event) {
            const flowerItems = flowerList.getElementsByTagName('li');
            if (flowerItems.length === 0) {
                event.preventDefault(); // Предотвращаем отправку формы
                alert("Пожалуйста, добавьте хотя бы один цветок в букет перед отправкой.");
            }
        });
    </script>
}
