// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcFlowers.Data;

#nullable disable

namespace MvcFlowers.Migrations
{
    [DbContext(typeof(MvcFlowersContext))]
    [Migration("20241119184433_TotalPrice")]
    partial class TotalPrice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BouqetFlowers", b =>
                {
                    b.Property<int>("BouqetId")
                        .HasColumnType("int");

                    b.Property<int>("MonoFlowerId")
                        .HasColumnType("int");

                    b.HasKey("BouqetId", "MonoFlowerId");

                    b.HasIndex("MonoFlowerId");

                    b.ToTable("BouqetFlowers");
                });

            modelBuilder.Entity("MvcFlowers.Models.Bouqet", b =>
                {
                    b.Property<int>("BouqetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BouqetId"));

                    b.Property<string>("SelectedFlowerIds")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("BouqetId");

                    b.ToTable("Bouqet");
                });

            modelBuilder.Entity("MvcFlowers.Models.MonoFlowers", b =>
                {
                    b.Property<int>("MonoFlowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MonoFlowerId"));

                    b.Property<string>("Colour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("RecievementDate")
                        .HasColumnType("datetime2");

                    b.HasKey("MonoFlowerId");

                    b.ToTable("MonoFlowers");
                });

            modelBuilder.Entity("MvcFlowers.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("BouqetId")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("OrderId");

                    b.HasIndex("BouqetId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BouqetFlowers", b =>
                {
                    b.HasOne("MvcFlowers.Models.Bouqet", null)
                        .WithMany()
                        .HasForeignKey("BouqetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MvcFlowers.Models.MonoFlowers", null)
                        .WithMany()
                        .HasForeignKey("MonoFlowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MvcFlowers.Models.Order", b =>
                {
                    b.HasOne("MvcFlowers.Models.Bouqet", "Bouqet")
                        .WithMany()
                        .HasForeignKey("BouqetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bouqet");
                });
#pragma warning restore 612, 618
        }
    }
}
